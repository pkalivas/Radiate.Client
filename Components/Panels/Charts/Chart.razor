@using Radiate.Engines.Entities
@using Plotly.Blazor.Traces.ScatterLib
@using Margin = Plotly.Blazor.LayoutLib.Margin
@using Plotly.Blazor.LayoutLib
@using Plotly.Blazor.LayoutLib.XAxisLib
@using Radiate.Client.Services.Schema

@if (Data.Any() && layout != null)
{
    <PlotlyChart @bind-Config="config" @bind-Layout="layout" @bind-Data="data" @ref="chart"/>
}

@code {
    [Parameter] public int Height { get; set; } = 300;
    [Parameter] public bool ShowGrid { get; set; } = false;
    [Parameter] public List<ITrace> Data { get; set; } = new();

    private PlotlyChart chart;
    private Config config = new() { Responsive = true, AutoSizable = true};

    private Layout? layout;

    private IList<ITrace> data { get; set; }

    protected override void OnParametersSet()
    {
        layout = new()
        {
            AutoSize = true,
            Font = new Font
            {
                Color = "#a9a9a9"
            },
            XAxis = new List<XAxis>
            {
                new()
                {
                    ShowGrid = ShowGrid,
                    ShowLine = ShowGrid,
                    GridColor = ShowGrid ? "#a9a9a9" : "#000000"
                }
            },
            YAxis = new List<YAxis>
            {
                new()
                {
                    ShowGrid = ShowGrid,
                    ShowLine = ShowGrid,
                    GridColor = ShowGrid ? "#a9a9a9" : "#000000"
                }
            },
            PaperBgColor = "rgba(0,0,0,0)",
            PlotBgColor = "rgba(0,0,0,0)",
            Margin = new Margin
            {
                T = 1,
                B = 20,
                L = 35,
                R = 1
            },
        };
        
        if (Data.Any())
        {
            data = Data;
            chart?.Update();
        }
        else
        {
            data = new List<ITrace>();
        }
        
        if (Height != layout.Height)
        {
            layout.Height = Height;
            StateHasChanged();
        }
        
        base.OnParametersSet();
    }
}