@inherits StoreComponent<InputsPanelModelProjection>

<MudGrid Class="mb-3">
    <MudItem md="3">
        <MudNumericField Label="Population Size"
                         Variant="Variant.Filled"
                         Value="@Model.Inputs.PopulationInputs.PopulationSize"
                         ReadOnly="@Model.IsReadonly"
                         DisableUnderLine="@Model.IsReadonly"
                         HideSpinButtons="@Model.IsReadonly"
                         ValueChanged="@((int size) => OnInputChange(Model, inputs => inputs.PopulationInputs.PopulationSize = size))">
        </MudNumericField>
    </MudItem>
    <MudItem md="3">
        <MudNumericField Label="Mutation Rate"
                         Variant="Variant.Filled"
                         ReadOnly="@Model.IsReadonly"
                         DisableUnderLine="@Model.IsReadonly"
                         HideSpinButtons="@Model.IsReadonly"
                         Value="@Model.Inputs.PopulationInputs.MutationRate"
                         ValueChanged="@((float rate) => OnInputChange(Model, inputs => inputs.PopulationInputs.MutationRate = rate))">
        </MudNumericField>
    </MudItem>
    <MudItem md="3">
        <MudNumericField Label="Crossover Rate"
                         Variant="Variant.Filled"
                         ReadOnly="@Model.IsReadonly"
                         DisableUnderLine="@Model.IsReadonly"
                         HideSpinButtons="@Model.IsReadonly"
                         Value="@Model.Inputs.PopulationInputs.CrossoverRate"
                         ValueChanged="@((float rate) => OnInputChange(Model, inputs => inputs.PopulationInputs.CrossoverRate = rate))">
        </MudNumericField>
    </MudItem>
    <MudItem md="3">
        <MudNumericField Label="Add Gate Rate"
                         Variant="Variant.Filled"
                         ReadOnly="@Model.IsReadonly"
                         DisableUnderLine="@Model.IsReadonly"
                         HideSpinButtons="@Model.IsReadonly"
                         Value="@Model.Inputs.GraphInputs.AddGateRate"
                         ValueChanged="@((float rate) => OnInputChange(Model, inputs => inputs.GraphInputs.AddGateRate = rate))">
        </MudNumericField>
    </MudItem>
    <MudItem md="3">
        <FloatInputField Label="Add Weight Rate"
                         IsReadonly="@Model.IsReadonly"
                         Inputs="@Model.Inputs"
                         ValueGetter="@(inputs => inputs.GraphInputs.AddWeightRate)"
                         InputsChanged="@((float rate) => OnInputChange(Model, inputs => inputs.GraphInputs.AddWeightRate = rate))"/>
        @* <MudNumericField Label="Add Weight Rate" *@
        @*                  Variant="Variant.Filled" *@
        @*                  ReadOnly="@Model.IsReadonly" *@
        @*                  DisableUnderLine="@Model.IsReadonly" *@
        @*                  HideSpinButtons="@Model.IsReadonly" *@
        @*                  Value="@Model.Inputs.GraphInputs.AddWeightRate" *@
        @*                  ValueChanged="@((float rate) => OnInputChange(Model, inputs => inputs.GraphInputs.AddWeightRate = rate))"> *@
        @* </MudNumericField> *@
    </MudItem>
    <MudItem md="3">
        <MudNumericField Label="Add Link Rate"
                         Variant="Variant.Filled"
                         ReadOnly="@Model.IsReadonly"
                         DisableUnderLine="@Model.IsReadonly"
                         HideSpinButtons="@Model.IsReadonly"
                         Value="@Model.Inputs.GraphInputs.AddLinkRate"
                         ValueChanged="@((float rate) => OnInputChange(Model, inputs => inputs.GraphInputs.AddLinkRate = rate))">
        </MudNumericField>
    </MudItem>
    <MudItem md="3">
        <MudNumericField Label="Add Memory Rate"
                         Variant="Variant.Filled"
                         ReadOnly="@Model.IsReadonly"
                         DisableUnderLine="@Model.IsReadonly"
                         HideSpinButtons="@Model.IsReadonly"
                         Value="@Model.Inputs.GraphInputs.AddMemoryRate"
                         ValueChanged="@((float rate) => OnInputChange(Model, inputs => inputs.GraphInputs.AddMemoryRate = rate))">
        </MudNumericField>
    </MudItem>
    <MudItem md="3">
        <MudNumericField Label="Iteration"
                         Variant="Variant.Filled"
                         ReadOnly="@Model.IsReadonly"
                         DisableUnderLine="@Model.IsReadonly"
                         HideSpinButtons="@Model.IsReadonly"
                         Value="@Model.Inputs.LimitInputs.IterationLimit"
                         ValueChanged="@((int limit) => OnInputChange(Model, inputs => inputs.LimitInputs.IterationLimit = limit))">
        </MudNumericField>
    </MudItem>
</MudGrid>

@code {

    protected override IObservable<InputsPanelModelProjection> Select() => Store.Select(RunSelectors.SelectInputsModel);
    
    private async Task OnInputChange(InputsPanelModelProjection inputs, Action<RunInputsState> setter)
    {
        var newInputs = inputs.Inputs with { };
        setter(newInputs);
        Store.Dispatch(new SetRunInputsAction(inputs.RunId, newInputs));
    }

}