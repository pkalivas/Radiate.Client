@if (!IsReadonly)
{
    <MudNumericField Label="@Label"
                     Variant="Variant.Filled"
                     ReadOnly="@IsReadonly"
                     DisableUnderLine="@IsReadonly"
                     HideSpinButtons="@IsReadonly"
                     Value="@Value"
                     Step="@Step"
                     Min="0"
                     ValueChanged="@((int value) => OnValueChanged(value))">
    </MudNumericField>
}
else
{
    <div class="column border-bottom">
        <div>
            <strong>@Label:</strong>
        </div>
        <div>@Value</div>
    </div>
}

@code {
    [Parameter] public string Label { get; set; }
    [Parameter] public bool IsReadonly { get; set; }
    [Parameter] public int Value { get; set; }
    [Parameter] public int Step { get; set; } = 1;
    [Parameter] public EventCallback<int> InputsChanged { get; set; }
    
    private void OnValueChanged(int value)
    {
        InputsChanged.InvokeAsync(value);
    }
}