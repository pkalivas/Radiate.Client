@inherits StoreComponent<InputsPanelModelProjection>

<MudGrid Class="px-4">
    <MudItem md="6">
        <MudGrid Class="mt-3">
            <MudItem md="6">
                <MudNumericField Label="Population Size"
                                 Variant="Variant.Filled"
                                 Value="@Model.Inputs.PopulationInputs.PopulationSize"
                                 ReadOnly="@Model.IsReadonly"
                                 DisableUnderLine="@Model.IsReadonly"
                                 HideSpinButtons="@Model.IsReadonly"
                                 ValueChanged="@((int size) => OnInputChange(Model, inputs => inputs.PopulationInputs.PopulationSize = size))">
                </MudNumericField>
            </MudItem>
            <MudItem md="6">
                <MudNumericField Label="Mutation Rate"
                                 Variant="Variant.Filled"
                                 ReadOnly="@Model.IsReadonly"
                                 DisableUnderLine="@Model.IsReadonly"
                                 HideSpinButtons="@Model.IsReadonly"
                                 Value="@Model.Inputs.PopulationInputs.MutationRate"
                                 ValueChanged="@((float rate) => OnInputChange(Model, inputs => inputs.PopulationInputs.MutationRate = rate))">
                </MudNumericField>
            </MudItem>
        </MudGrid>
    </MudItem>
    <MudItem md="6">
        <MudGrid Class="mt-3">
            <MudItem>
                <MudNumericField Label="Iteration"
                                 Variant="Variant.Filled"
                                 ReadOnly="@Model.IsReadonly"
                                 DisableUnderLine="@Model.IsReadonly"
                                 HideSpinButtons="@Model.IsReadonly"
                                 Value="@Model.Inputs.LimitInputs.IterationLimit"
                                 ValueChanged="@((int limit) => OnInputChange(Model, inputs => inputs.LimitInputs.IterationLimit = limit))">
                </MudNumericField>
            </MudItem>
        </MudGrid>
    </MudItem>
</MudGrid>

@code {

    protected override IObservable<InputsPanelModelProjection> Select() => Store.Select(RunSelectors.SelectInputsModel);
    
    private async Task OnInputChange(InputsPanelModelProjection inputs, Action<RunInputsState> setter)
    {
        var newInputs = inputs.Inputs with { };
        setter(newInputs);
        Store.Dispatch(new SetRunInputsAction(inputs.RunId, newInputs));
    }

}