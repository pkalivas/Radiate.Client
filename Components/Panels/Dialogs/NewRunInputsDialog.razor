<MudDialog>
    <DialogContent>
        <div class="row">
            <div class="col">
                <div>
                    <MudSelect SelectedValuesChanged="@OnModelChange"
                               Value="@RunState.Inputs.ModelType"
                               MultiSelection="false"
                               HelperText="Model To Run"
                               T="string"
                               Label="Model"
                               Variant="Variant.Text">
                        @foreach (var model in StateOptions.ModelNames)
                        {
                            <MudSelectItem Value="@model"/>
                        }
                    </MudSelect>
                </div>
                <div>
                    <MudSelect SelectedValuesChanged="@OnDataSetChange"
                               Value="@RunState.Inputs.DataSetType"
                               MultiSelection="false"
                               HelperText="DataSet To Run"
                               T="string"
                               Label="DataSet"
                               Variant="Variant.Text">
                        
                        @foreach (var data in StateOptions.GetModelDataSets(RunState.Inputs.ModelType))
                        {
                            <MudSelectItem Value="@data"/>

                        }
                    </MudSelect>
                </div>
            </div>
        </div>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Start</MudButton>
    </DialogActions>
</MudDialog>

@code 
{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    private RunState RunState { get; set; }

    protected override void OnInitialized()
    {
        RunState = new RunState();
        base.OnInitialized();
    }

    void Cancel() => MudDialog.Cancel();

    void Submit() => MudDialog.Close(DialogResult.Ok(RunState));

    private void OnModelChange(IEnumerable<string> model)
    {
        var selectedModel = model.First();
        var dataSets = StateOptions.GetModelDataSets(selectedModel);
        
        RunState.Inputs.DataSetType = dataSets.First();
        RunState.Inputs.ModelType = model.First();
    }

    private void OnDataSetChange(IEnumerable<string> value)
    {
        RunState.Inputs.DataSetType = value.First();
    }
}