@inherits StoreComponent<EngineTreePanelProjection>

<MudDialog DisableSidePadding="true">
    <DialogContent>
        <MudContainer Style="max-height: 500px; overflow-y: scroll">
            <MudTreeView Items="@Model?.TreeItems" Dense="true" Hover="true" ExpandOnClick="true">
                <ItemTemplate>
                    <MudTreeViewItem @bind-Expanded="@context.IsExpanded" Items="@context.TreeItems" OnClick="@(() => OnSelectedValueChanged(context))">
                        <Content>
                            <MudTreeViewItemToggleButton @bind-Expanded="@context.IsExpanded" Visible="@context.HasChild"/>
                            <EngineStateDisplay EngineState="@context.Data"/>
                        </Content>
                    </MudTreeViewItem>
                </ItemTemplate>
            </MudTreeView>
        </MudContainer>
    </DialogContent>    
    <DialogActions>
        <MudButton OnClick="@ExpandAll">
            @if (_allExpanded)
            {
                <MudText>Collapse All</MudText>
            }
            else
            {
                <MudText>Expand All</MudText>
            }
        </MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] public MudDialogInstance MudDialog { get; set; }
    
    private bool _allExpanded = true;
    
    private void OnSelectedValueChanged(TreeItemData<EngineState> context)
    {
        var data = Model.TreeItems.ToDictionary(key => key.Data.EngineId, value => value.IsExpanded);
        data[context.Data.EngineId] = !context.IsExpanded;
        Dispatch(new SetEngineTreeExpandedAction(Model.RunId, data));
    }
    
    private void ExpandAll()
    {
        _allExpanded = !_allExpanded;
        var data = Model.TreeItems.ToDictionary(key => key.Data.EngineId, _ => _allExpanded);
        Dispatch(new SetEngineTreeExpandedAction(Model.RunId, data));
    }
    
    protected override IObservable<EngineTreePanelProjection> Select() =>
        Store.Select(EngineSelectors.SelectEngineTreePanelModel);
}