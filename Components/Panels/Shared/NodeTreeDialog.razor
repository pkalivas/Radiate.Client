@using Radiate.Extensions.Evolution.Architects.Groups
@using Radiate.Client.Services.Mappers
@using Radiate.Extensions.Evolution.Architects.Nodes
@using Radiate.Extensions.Operations

<MudDialog>
    <DialogContent>
        <MudTreeView Items="@Items" Dense="true">
            <ItemTemplate>
                <MudTreeViewItem @bind-Expanded="@context.IsExpanded" Items="@context.TreeItems"> 
                    <Content>
                        <MudTreeViewItemToggleButton @bind-Expanded="@context.IsExpanded" Visible="@context.HasChild"/>
                        <NodeDisplay Node="@context.Data" Underling="true"/>
                    </Content>
                </MudTreeViewItem>
            </ItemTemplate>
        </MudTreeView>
    </DialogContent>
    <DialogActions>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public int Index { get; set; }
    [Parameter] public NodeGroup<IOp<float>> NodeGroup { get; set; }

    private HashSet<TreeItemData<Node<IOp<float>>>> Items { get; set; }

    protected override Task OnInitializedAsync()
    {
        Items = TreeItemMapper.NodeTree(Index, NodeGroup);
        return base.OnInitializedAsync();
    }

}