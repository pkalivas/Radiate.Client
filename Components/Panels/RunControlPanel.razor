@using Color = MudBlazor.Color
@using Size = MudBlazor.Size
@inherits StoreComponent<RunControlPanelProjection>

<div class="d-flex justify-content-between mt-3">
	<div class="align-items-center w-100">
		@if (Model.NeedsImageUpload)
		{
			<div>
				<ImageUpload Height="@Model.Inputs.ImageInputs.Height"
				             Width="@Model.Inputs.ImageInputs.Width"
				             ImageChanged="@((ImageEntity image) => Dispatch(new SetTargetImageAction(Model.RunId, image)))"/>	
			</div>
		}
		else
		{
			<div>
				<MudButton Class="w-100"
				           Size="Size.Small"
				           Variant="Variant.Filled"
				           Color="Color.Secondary"
				           Disabled="@((!Model.IsRunning && !Model.IsCompleted) || Model.IsCompleted)"
				           OnClick="@Stop">
					<MudIcon Icon="@Icons.Material.Filled.Stop"
					         Size="Size.Small"/>
					Stop
				</MudButton>
			</div>
			<div class="mt-2">
				<MudButton Class="w-100"
				           Size="Size.Small"
				           Variant="Variant.Filled"
				           Color="Color.Primary"
				           Disabled="@(!Model.IsRunning || Model.IsCompleted || Model.IsPaused)"
				           OnClick="@Pause">
					<MudIcon Icon="@Icons.Material.Filled.Pause"
					         Size="Size.Small"/>
					Pause
				</MudButton>
			</div>
			<div class="mt-2">
				<MudButton Class="w-100"
				           Size="Size.Small"
				           Variant="Variant.Filled"
				           Color="Color.Info"
				           Disabled="@(!Model.IsPaused)"
				           OnClick="@Resume">
					<MudIcon Icon="@Icons.Material.Filled.Restore"
					         Size="Size.Small"/>
					Resume
				</MudButton>
			</div>
			<div class="mt-2">
				<MudButton Size="Size.Small"
				           Color="Color.Tertiary"
				           Variant="Variant.Filled"
				           Class="w-100"
				           Disabled="@(Model.IsRunning || Model.IsCompleted || Model.Inputs is {ModelType: "Image", ImageInputs.TargetImage.IsEmpty: true})"
				           OnClick="@Start">
					<MudIcon Icon="@Icons.Material.Filled.PlayArrow"
					         Class=""
					         Size="Size.Small"/>
					Start
				</MudButton>
			</div>
			
			@if (Model.ModelType == ModelTypes.Image && Model.IsCompleted)
			{
				<div class="mt-2">
					<ImageDownload IsDisabled="@(!Model.IsCompleted)" Image="@Model.Image"/>
				</div>
			}
		}
	</div>
</div>

@code {
    
    private void Start() => Store.Dispatch(new StartEngineAction(Model.RunId, Model.Inputs));

    private void Stop() => Store.Dispatch(new CancelEngineRunAction(Model.RunId));
    
    private void Resume() => Store.Dispatch(new ResumeEngineRunAction(Model.RunId));
    
    private void Pause() => Store.Dispatch(new PauseEngineRunAction(Model.RunId));
    
    protected override IObservable<RunControlPanelProjection> Select() => Store.Select(EngineSelectors.SelectRunControlPanelModel);
}
