@using Radiate.Client.Domain.Templates.Panels

@if (Panel is GridPanel gridPanel)
{
    <MudGrid>
        @foreach (var gridItem in gridPanel.Items)
        {
            <MudItem md="@gridItem.ColSpan" @key="@gridItem.Panel.Id">
                <PanelDisplay Panel="@gridItem.Panel"/>
            </MudItem>
        }
    </MudGrid>
}
else if (Panel is ToolbarPanel toolBarPanel)
{
    <MudPaper Elevation="2" Height="@($"{toolBarPanel.Height}px")" Class="h-full">
        <ToolBar Title="@toolBarPanel.Title" Actions="@toolBarPanel.Actions"/>
        <DynamicComponent Type="@toolBarPanel.Content"/>
    </MudPaper>
}
else if (Panel is TabPanel tabPanel)
{
    <MudTabs Elevation="2" Centered="true" Rounded="false">
        @foreach (var tabItem in tabPanel.Tabs)
        {
            <MudTabPanel Text="@tabItem.Panel.Title" @key="@tabItem.Panel.Id">
                <PanelDisplay Panel="@tabItem.Panel"/>
            </MudTabPanel>
        }
    </MudTabs>
}
else if (Panel is PaperPanel paperPanel)
{
    <MudPaper Elevation="2" Height="@($"{paperPanel.Height}px")" Class="pa-3">
        <PanelHeader Title="@paperPanel.Title"/>
        <DynamicComponent Type="@paperPanel.Content" Parameters="@paperPanel.Props"/>
    </MudPaper>
}
else if (Panel is CardPanel cardPanel)
{
    <MudCard Elevation="2" class="h-100">
        <MudCardHeader>
            <CardHeaderContent>
                <MudText Typo="Typo.h6">@cardPanel.Title</MudText>
            </CardHeaderContent>
            <CardHeaderActions>
                <ActionsButton Actions="@cardPanel.Actions"/>
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent>
            <DynamicComponent Type="@cardPanel.Content" Parameters="@cardPanel.Props" />
       </MudCardContent>
    </MudCard>
}
else
{
    <MudPaper Elevation="2">
        <MudText Typo="Typo.h6" Class="pa-2">
            Panel type not supported
        </MudText>
    </MudPaper>
}

@code {
    [Parameter] public IPanel Panel { get; set; }
}
