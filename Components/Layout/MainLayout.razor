@using Radiate.Client.Services.Store.Models
@using Radiate.Client.Services.Store.Selections
@using Radiate.Client.Services.Store.Actions
@using Radiate.Client.Services.Store
@inherits LayoutComponentBase

<MudThemeProvider IsDarkMode="true"/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar>
        <MudButton OnClick="@(() => Store.Dispatch(new LayoutChangedAction { IsSidebarOpen = !_drawerOpen }))"><MudIcon Icon="@Icons.Material.Filled.Menu"></MudIcon></MudButton>
        Radiate Client
        <TestSub/>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu/>
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    
    [Inject] private Store<RootState> Store { get; set; }
    
    protected override Task OnInitializedAsync()
    {
        Store.Select(LayoutStateSelector.SelectLayoutState).Subscribe(SetDrawerOpen);
        return base.OnInitializedAsync();
    }
    
    private void SetDrawerOpen(LayoutModel model) => InvokeAsync(() =>
    {
        _drawerOpen = model.IsSidebarOpen;
        StateHasChanged();
    });
}