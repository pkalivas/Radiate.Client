@inherits StoreComponent<List<PanelState>> 

<MudDialog>
    <DialogContent>
        <MudContainer>
            <MudDataGrid Items="@Model" 
                         Dense="true"
                         Elevation="0"
                         FixedHeader="true"
                         Height="400px" ColumnResizeMode="ResizeMode.Column">
                <Columns>
                    <HierarchyColumn T="PanelState" />
                    <PropertyColumn Property="x => x.Key"/>
                    <TemplateColumn>
                        <CellTemplate>
                            <MudText Typo="Typo.caption">@context.Item.Panel.GetType().Name</MudText>
                        </CellTemplate>
                    </TemplateColumn>
                    <PropertyColumn Property="x => x.Panel.Title" Title="Title" />
                    <PropertyColumn Property="x => x.IsVisible" Title="Visible" />
                    <PropertyColumn Property="x => x.IsExpanded" Title="Expanded" />
                </Columns>
                <ChildRowContent>
                    <MudCard Elevation="1">
                        <JsonData Data="context.Item"/>
                    </MudCard>
                </ChildRowContent>
            </MudDataGrid>
        </MudContainer>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    protected override IObservable<List<PanelState>> Select() => Store.Select(state =>
    {
        var currentRunId = state.CurrentRunId;
        return state.RunUis.TryGetValue(currentRunId, out var currentUi) 
            ? currentUi.PanelStates.Values.OrderBy(val => val.Index).ToList() 
            : [];
    });
}