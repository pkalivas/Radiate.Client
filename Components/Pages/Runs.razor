@page "/runs/{runId:guid}/{modelType}"
@rendermode InteractiveServer
@using Radiate.Client.Domain.Templates
@using Radiate.Client.Domain.Store.Selections
@using Radiate.Client.Domain.Store.Models.Projections
@using Radiate.Client.Domain.Store.Actions
@inherits StoreComponent<RunUiProjection>

<MudContainer Class="mt-4 px-8" MaxWidth="MaxWidth.False">
    <MudGrid>
        @foreach (var panel in Model.UiTemplate.GridList.GridPanels)
        {
            <MudItem md="@panel.Cols" @key="@panel.Id">
                @if (panel.GridPanel is ToolbarPanel)
                {
                    <ToolBar Title="@panel.GridPanel.Title" Actions="@panel.GridPanel.Actions">
                        <Options></Options>
                        <ChildContent>
                            <MudPaper Elevation="2" MaxHeight="@($"{panel.MaxHeight}px")" Class="pa-4">
                                <PanelDisplay Panel="@panel.GridPanel"/>
                            </MudPaper>
                        </ChildContent>
                    </ToolBar>
                }
                else
                {
                    <MudPaper Elevation="2" MaxHeight="@($"{panel.MaxHeight}px")" Class="pa-4">
                        <PanelDisplay Panel="@panel.GridPanel"/>
                    </MudPaper>   
                }
            </MudItem>
        }
    </MudGrid>
    <MudGrid>
        <MudItem md="8">
            <MudExpansionPanels Dense="true" Elevation="2" MultiExpansion="true">
                @foreach (var panel in Model.UiTemplate.LeftSideAccordion.ExpansionPanels)
                {
                    if (panel.ExpansionPanel is ToolbarPanel)
                    {
                        <ToolBar Title="@panel.ExpansionPanel.Title">
                            <Options></Options>
                            <ChildContent>
                               <MudExpansionPanel IsExpanded="@panel.IsOpen" Dense="true" MaxHeight="@panel.MaxHeight" @key="panel.Id">
                                 <TitleContent>
                                     <PanelHeaderPanel Title="@panel.ExpansionPanel.Title"/>
                                 </TitleContent>
                                 <ChildContent>
                                     <PanelDisplay Panel="@panel.ExpansionPanel"/>
                                 </ChildContent>
                               </MudExpansionPanel>  
                            </ChildContent>
                        </ToolBar>
                    }
                    else
                    {
                        <MudExpansionPanel IsExpanded="@panel.IsOpen" 
                                           Dense="true"
                                           MaxHeight="@panel.MaxHeight"
                                           IsExpandedChanged="@((bool changed) => OnExpandedChanged(changed, panel.Id))"
                                           @key="panel.Id">
                            <TitleContent>
                                <PanelHeaderPanel Title="@panel.ExpansionPanel.Title"/>
                            </TitleContent>
                            <ChildContent>
                                <PanelDisplay Panel="@panel.ExpansionPanel"/>
                            </ChildContent>
                        </MudExpansionPanel>   
                    }
                }
            </MudExpansionPanels>
        </MudItem>
        <MudItem md="4">
            <MudExpansionPanels Dense="true" Elevation="2" MultiExpansion="true">
                @foreach (var panel in Model.UiTemplate.RightSideAccordion.ExpansionPanels)
                {
                    if (panel.ExpansionPanel is ToolbarPanel)
                    {
                        <ToolBar Title="@panel.ExpansionPanel.Title">
                            <Options></Options>
                            <ChildContent>
                                <MudExpansionPanel IsExpanded="@panel.IsOpen" Dense="true" MaxHeight="@panel.MaxHeight" @key="panel.Id">
                                    <TitleContent>
                                        <PanelHeaderPanel Title="@panel.ExpansionPanel.Title"/>
                                    </TitleContent>
                                    <ChildContent>
                                        <PanelDisplay Panel="@panel.ExpansionPanel"/>
                                    </ChildContent>
                                </MudExpansionPanel>  
                            </ChildContent>
                        </ToolBar>
                    }
                    else
                    {
                        <MudExpansionPanel IsExpanded="@panel.IsOpen" Dense="true" MaxHeight="@panel.MaxHeight" @key="panel.Id">
                            <TitleContent>
                                <PanelHeaderPanel Title="@panel.ExpansionPanel.Title"/>
                            </TitleContent>
                            <ChildContent>
                                <PanelDisplay Panel="@panel.ExpansionPanel"/>
                            </ChildContent>
                        </MudExpansionPanel>
                    }
                }
            </MudExpansionPanels>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    [Parameter] public Guid RunId { get; set; }
    [Parameter] public string ModelType { get; set; }

    protected override IObservable<RunUiProjection> Select() => Store.Select(UiSelectors.SelectRunTemplate);
    
    private async Task OnExpandedChanged(bool changed, Guid panelId)
    {
        Dispatch(new SetPanelsExpandedAction(Model.RunId, new Dictionary<Guid, bool>
        {
            [panelId] = changed
        }));
    }
}
